WebGPURenderer
NodeMaterial
--------------------
vertexShader
fragmentShader
Console Logs
....................
// Three.js r173 - Node System

// directives
// structs
// uniforms

struct renderStruct {
	cameraProjectionMatrix : mat4x4<f32>,
	cameraViewMatrix : mat4x4<f32>
};
@binding( 0 ) @group( 0 )
var<uniform> render : renderStruct;

struct objectStruct {
	nodeUniform2 : mat4x4<f32>
};
@binding( 0 ) @group( 1 )
var<uniform> object : objectStruct;

// varyings

struct VaryingsStruct {
	@builtin( position ) Vertex : vec4<f32>
};
var<private> varyings : VaryingsStruct;

// codes

@vertex
fn main( @location( 0 ) position : vec3<f32> ) -> VaryingsStruct {

	// vars
	
	var modelViewMatrix : mat4x4<f32>;
	var v_modelViewProjection : vec4<f32>;
	var v_positionView : vec3<f32>;
	var positionLocal : vec3<f32>;

	// flow
	// code

	positionLocal = position;
	modelViewMatrix = ( render.cameraViewMatrix * object.nodeUniform2 );
	v_positionView = ( modelViewMatrix * vec4<f32>( positionLocal, 1.0 ) ).xyz;
	v_modelViewProjection = ( render.cameraProjectionMatrix * vec4<f32>( v_positionView, 1.0 ) );

	// result

	varyings.Vertex = v_modelViewProjection;

	return varyings;

}

main.ts:45 // Three.js r173 - Node System

// global
diagnostic( off, derivative_uniformity );


// structs

struct OutputStruct {
	@location(0) color: vec4<f32>
};
var<private> output : OutputStruct;

// uniforms
// codes

@fragment
fn main(  ) -> OutputStruct {

	// vars
	// flow
	// code
	// result

	output.color = vec4<f32>( vec3<f32>( 1.0, 0.059511238155621766, 0.0 ), 1.0 );

	return output;

}
---------------------
TextureLoader
texture
convertColorSpace
